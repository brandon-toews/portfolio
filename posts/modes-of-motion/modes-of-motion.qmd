---
title: "Modes of Motion Programming Mathematics"
format:
  html:
    code-tools:
      source: https://github.com/brandon-toews/modes-of-motion-assignment
author: "Brandon Toews"
badges: true
categories:
- mathematics
- c#
- games
- unity
- lerp
date: "2022-11-30"
description: Unity Games Engine project to demonstrate various methods of movement, making use of custom linear interpolation (lerp) libraries and scripts using Unity physics. 
toc: true
image: modesofmotion.png
twitter-card: true
card-style: summary
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  title-delim: "**.**"
---

![](modesofmotion.png)

::: {.callout-tip collapse="true"}
## Play Demo

|                    |                      |                 |     |
|-------------------:|----------------------|----------------:|-----|
|        **Forward** | `Up Arrow` or `W`    |        **Down** | `Q` |
|       **Backward** | `Down Arrow` or `S`  |   **Look Left** | `Z` |
|    **Strafe Left** | `Left Arrow` or `A`  |  **Look Right** | `X` |
|   **Strafe Right** | `Right Arrow` or `D` |     **Look Up** | `R` |
|             **Up** | `E`                  |   **Look Down** | `F` |
| **Escape Program** | `Esc`                |                 |     |

: **Camera Keyboard Controls**{tbl-colwidths="\[30,20,20,30\]"}

**Camera Canvas**\
When user clicks anywhere in the scene camera canvas is enabled allowing the user to do various camera movements based on the options they choose. In this mode the user can create a limited amount of cubes and spheres using the "Create Cube" & "Create Sphere" buttons.

**Object Canvas**\
When an object is clicked on it is selected then the object canvas is enabled allowing the user to move the object using the various options they choose.

### ðŸš€ Play [Demo](https://brandon-toews.github.io/modes-of-motion.app/)
:::

# Modes of Motion
Project to demonstrate various methods of movement within the Unity Games Engine, making use of my own linear interpolation (lerp) libraries and scripts using Unity physics all written in C#. This scene employs mathematical techniques like projectile formulas and equations that have been developed over the course of the module.

::: callout-note
## Source Code

View source code on Github [repository](https://github.com/brandon-toews/modes-of-motion-assignment).
:::

# Video Walkthrough
![](ModesofMotionWalkthrough.mp4){#video-walkthrough}

# References

### Unity Documentation

<https://docs.unity3d.com/ScriptReference/index.html>

### Spawning Objects

{{< video https://www.youtube.com/watch?v=E7gmylDS1C4 >}}

### Collision Detection

{{< video https://www.youtube.com/watch?v=ZoZcBgRR9ns >}}

### Specific Coding Problems Queried on:

<https://stackoverflow.com/questions/>
